---
layout: post
title: Tip-a-day - 'Kick me' birthday reminders
description: Automated birthday reminders with abook and remind
categories: [abook, bash, remind, python, tad, tips]
---

Tony Collins asks on the EADS Linux list:

bq.  I almost forgot the wife’s birthday last week, not wanting to do that again I’m turning to technology not deeper consideration.  So guys, how do you manage it?

My answer is to combine the excellent "abook":http://abook.sourceforge.net/ and "remind":http://www.roaringpenguin.com/products/remind tools in to a really cool solution that nags you about birthdays every time you login.

For those that haven't used it, @abook@ is a simple "ncurses":http://dickey.his.com/ncurses/ based address book.  For some years now I’ve been using @abook@ to manage my personal address book, as it is both small and quite featureful.  The address file is in a standard @ini@ format that I can easily import from and export to practically anything with only a small "Python":http://www.python.org/ script using "ConfigParser":file://localhost/usr/share/doc/python-docs-2.6.2-r1/html/library/configparser.html.

@remind@ is a functional **to the point of insanity** text-based reminder tool.  I use it mainly to remind me of tasks that need completing when I login, although I do have a hook in "awesome":http://awesome.naquadah.org/ to display the @remind@ output at other times.  Again the file format is quite sensible which makes writing importers and exporters simple enough.  As an example, I generate my @~/.reminders.d/meetings@ file from an "hCalender":http://microformats.org/wiki/hcalendar page.

<div class="thumb">
!/images/2009-09-26-abook_screenshot-mini.png(abook displaying custom tab)!
</div>

Now the birthday trick is a cool one, @abook@ has a number of custom fields you can use for anything you like.  I use @customfield 2@ to store birthdays in ISO-8601 format as in “1972-04-12”.  So that we see the correct field name in the user interface instead of just @Custom@ add the following to your @~/.abook/abookrc@:

{% highlight text %}
customfield 2 Birthday
{% endhighlight %}
p>. "Fork this code":http://gist.github.com/198015

A little @python@ script is all that is needed to generate a reminder input file from our address book now.

{% highlight python %}
#! /usr/bin/python -tt

import ConfigParser
import datetime
import os

data = ConfigParser.ConfigParser()
data.read(os.path.expanduser("~/.abook/addressbook"))

birthdays = filter(lambda x: "custom2" in data.options(x),
                   data.sections())

print "# THIS FILE IS AUTOGENERATED FROM ABOOK DATA"

for record in birthdays:
    try:
        name = data.get(record, "nick")
    except ConfigParser.NoOptionError:
        name = data.get(record, "name")
    birthdate = datetime.datetime.strptime(data.get(record, "custom2"),
                                           "%Y-%m-%d")
    print "REM %s +4 MSG %s's [grn][_yr_num(%d)][nrm] Birthday %%a" \
        % (birthdate.strftime("%d %B"), name, birthdate.year)
{% endhighlight %}
p>. "Fork this code":http://gist.github.com/198018

I use the following "make":http://www.gnu.org/software/make/make.html snippet in my @~/Makefile@ to generate the @~/.reminders.d/birthdays@ file:

{% highlight make %}
.reminders.d/birthdays: .abook/addressbook .reminders.d/birthdays.py
	$(info - Generating remind's birthdays file)
	$(word 2, $^) >$@
{% endhighlight %}
p>. "Fork this code":http://gist.github.com/198019

And finally, we need to tell @remind@ to include our newly created file by editing @~/.reminders@:

{% highlight text %}
INCLUDE /home/jay/.reminders.d/birthdays
{% endhighlight %}
p>. "Fork this code":http://gist.github.com/198020

<div class="thumb">
!/images/2009-09-26-remind_screenshot.png(shell login screenshot)!
</div>

You could trigger a rebuild in your @~/.bashrc@ before you call @rem@ to see the reminders, so they are always up to date at login.  Or, you could be like me and have a post commit hook for "git":http://www.git-scm.com/ to manage this... because you are keeping your home directory version controlled as a sanity measure I hope!

