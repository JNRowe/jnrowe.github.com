<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">JNRowe - Posts tagged unix</title>
  <id>https://jnrowe.github.io/blog/tag/unix/atom.xml</id>
  <updated>2009-10-11T00:00:00Z</updated>
  <link href="https://jnrowe.github.io/" />
  <link href="https://jnrowe.github.io/blog/tag/unix/atom.xml" rel="self" />
  <subtitle type="text">Ramblings of a tired mind</subtitle>
  <generator uri="https://ablog.readthedocs.org" version="0.10.4">ABlog</generator>
  <entry xml:base="https://jnrowe.github.io/blog/tag/unix/atom.xml">
    <title type="text">Making a nice home</title>
    <id>https://jnrowe.github.io/articles/tips/Making_a_nice_home.html</id>
    <updated>2009-10-11T00:00:00Z</updated>
    <published>2009-10-11T00:00:00Z</published>
    <link href="https://jnrowe.github.io/articles/tips/Making_a_nice_home.html" />
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;making-a-nice-home&quot;&gt;

&lt;p&gt;Back in &lt;span class=&quot;xref std std-ref&quot;&gt;Kick_me_birthday_reminders&lt;/span&gt; I said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;You could trigger a rebuild in your &lt;code class=&quot;file docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;~/.bashrc&lt;/span&gt;&lt;/code&gt; before you call
&lt;strong class=&quot;command&quot;&gt;rem&lt;/strong&gt; to see the reminders, so they are always up to date at
login. Or, you could be like me and have a post commit hook for &lt;a class=&quot;reference external&quot; href=&quot;http://www.git-scm.com/&quot;&gt;git&lt;/a&gt; to
manage this… because you are keeping your home directory version controlled
as a sanity measure I hope!&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Today, Stuart Grady asked me in a private mail:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Okay, at which point is the “Tip of the Day” thingy going to be about using
hooks and &lt;a class=&quot;reference external&quot; href=&quot;http://www.gnu.org/software/make/make.html&quot;&gt;make&lt;/a&gt; in &lt;span class=&quot;target&quot; id=&quot;index-0&quot;&gt;&lt;/span&gt;&lt;code class=&quot;xref std std-envvar docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;$HOME&lt;/span&gt;&lt;/code&gt;?&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;I’ll take the hint and look at &lt;strong class=&quot;command&quot;&gt;make&lt;/strong&gt;.  For the purposes of this post
we’re going to pretend we haven’t read &lt;a class=&quot;reference external&quot; href=&quot;http://miller.emu.id.au/pmiller/books/rmch/&quot;&gt;recursive make considered harmful&lt;/a&gt; as
I don’t heed its advice for the &lt;code class=&quot;file docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Makefile&lt;/span&gt;&lt;/code&gt; I have in my home directory.
That said, let’s have a look at what can be found in my current top-level
&lt;code class=&quot;file docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Makefile&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;permissions&quot;&gt;
&lt;h1&gt;Permissions&lt;/h1&gt;
&lt;p&gt;I keep my home directory version controlled with &lt;strong class=&quot;command&quot;&gt;git&lt;/strong&gt;, but
&lt;strong class=&quot;command&quot;&gt;git&lt;/strong&gt; out of the box doesn’t maintain permissions on files(beyond the
executable bit anyway).  There are plenty of ways around this including using
external tools such as &lt;a class=&quot;reference external&quot; href=&quot;http://joey.kitenet.net/code/etckeeper/&quot;&gt;etckeeper&lt;/a&gt;, but I prefer the simple approach of setting
the permissions when they’re needed:&lt;/p&gt;
&lt;div class=&quot;highlight-make notranslate&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRIVATE_FILES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; .abook/addressbook .gnupg/secring.gpg .mailfilter .msmtprc &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        .ssh/id_rsa
&lt;span class=&quot;nv&quot;&gt;PRIVATE_DIRS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; .gnupg

&lt;span class=&quot;nf&quot;&gt;fix-perms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRIVATE_FILES&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRIVATE_DIRS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;info - Removing extra &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; permissions from private files and directories&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
        chmod &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;PRIVATE_FILES&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
        chmod &lt;span class=&quot;m&quot;&gt;700&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;PRIVATE_DIRS&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If this rule is called after a &lt;strong class=&quot;command&quot;&gt;git pull&lt;/strong&gt; is issued then the files
always have the correct permissions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;vim-hacks&quot;&gt;
&lt;h1&gt;vim hacks&lt;/h1&gt;
&lt;p&gt;I also call &lt;strong class=&quot;command&quot;&gt;make&lt;/strong&gt; in some subdirectories, the most interesting one is
probably for &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;.vim&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-make notranslate&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CTAGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; exuberant-ctags

&lt;span class=&quot;nv&quot;&gt;TARGETS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;patsubst /usr/lib/%, tags/%.ctags, &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;wildcard /usr/lib/python*&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    doc/tags

&lt;span class=&quot;nf&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TARGETS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;$(TARGETS)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;/%.&lt;span class=&quot;n&quot;&gt;ctags&lt;/span&gt;: /&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;/%
    &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;CTAGS&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; --exclude&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;test_* --exclude&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;tests.py --exclude&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;test.py &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        --exclude&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;*/test/* --exclude&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;*/tests/* --languages&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;python &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        -R -f &lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt; $&amp;lt;

&lt;span class=&quot;nf&quot;&gt;doc/tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;filter&lt;/span&gt;-&lt;span class=&quot;nv&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;tags&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;wildcard&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;/*&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
    vim -X -u NONE -c &lt;span class=&quot;s1&quot;&gt;&amp;#39;helptags $(dir $@)&amp;#39;&lt;/span&gt; -c &lt;span class=&quot;s1&quot;&gt;&amp;#39;:q&amp;#39;&lt;/span&gt; &amp;lt;/dev/null &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;&amp;gt;/dev/null

&lt;span class=&quot;nf&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    rm -f &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;TARGETS&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The values in the &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;patsubst&lt;/span&gt;&lt;/code&gt; block of the &lt;strong class=&quot;makevar&quot;&gt;TARGETS&lt;/strong&gt; definition are
a list of filenames to use for tag storage with &lt;a class=&quot;reference external&quot; href=&quot;http://ctags.sourceforge.net&quot;&gt;ctags&lt;/a&gt;.  The rule creates
a different &lt;strong class=&quot;command&quot;&gt;ctags&lt;/strong&gt; file for each installed &lt;a class=&quot;reference external&quot; href=&quot;http://www.python.org&quot;&gt;python&lt;/a&gt; version.  In the
rule to make the &lt;strong class=&quot;command&quot;&gt;ctags&lt;/strong&gt; files we specifically exclude test files as
they aren’t often useful in &lt;a class=&quot;reference external&quot; href=&quot;http://vimdoc.sourceforge.net/htmldoc/version7.html#new-omni-completion&quot;&gt;omni-completion&lt;/a&gt;, and they significantly pollute
the tags database for normal use.&lt;/p&gt;
&lt;p&gt;The final entry in &lt;strong class=&quot;makevar&quot;&gt;TARGETS&lt;/strong&gt; simply updates the tag lists for &lt;a class=&quot;reference external&quot; href=&quot;http://vimdoc.sourceforge.net/htmldoc/various.html#:helptags&quot;&gt;help
files&lt;/a&gt; installed in &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;~/.vim/doc&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;documentation&quot;&gt;
&lt;h1&gt;Documentation&lt;/h1&gt;
&lt;p&gt;The final subdirectory &lt;code class=&quot;file docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Makefile&lt;/span&gt;&lt;/code&gt; we’re going to look at is actually
called in a number of different directories to create &lt;abbr title=&quot;HyperText Markup Language&quot;&gt;HTML&lt;/abbr&gt; versions of
&lt;a class=&quot;reference external&quot; href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt; files.&lt;/p&gt;
&lt;div class=&quot;highlight-make notranslate&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GENERATED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;patsubst %.rst, %.html, &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;wildcard *.rst&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GENERATED&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;$(GENERATED)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; %.&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;: %.&lt;span class=&quot;n&quot;&gt;rst&lt;/span&gt;
        rst2html.py $&amp;lt; &lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If we call the above &lt;code class=&quot;file docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Makefile&lt;/span&gt;&lt;/code&gt; from our &lt;strong class=&quot;command&quot;&gt;git&lt;/strong&gt; hooks after any
pull or merge we always have up to date processed versions of documents.  It is
like having a personal web viewable wiki, but without having to use an awful
markup language.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://jnrowe.github.io/blog/tag/unix/atom.xml">
    <title type="text">Formatting CSV files in the shell</title>
    <id>https://jnrowe.github.io/articles/tips/Formatting_csv_files_in_the_shell.html</id>
    <updated>2009-10-10T00:00:00Z</updated>
    <published>2009-10-10T00:00:00Z</published>
    <link href="https://jnrowe.github.io/articles/tips/Formatting_csv_files_in_the_shell.html" />
    <author>
      <name>James Rowe</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;formatting-csv-files-in-the-shell&quot;&gt;

&lt;p&gt;kemi asks in &lt;code class=&quot;docutils literal notranslate&quot;&gt;&lt;span class=&quot;pre&quot;&gt;#bash&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Are there any tools to format &lt;abbr title=&quot;Comma Separated Values&quot;&gt;CSV&lt;/abbr&gt; files in the console?  Not
interactive, no spreadsheets&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.linuxmanpages.com/man1/column.1.php&quot;&gt;column&lt;/a&gt;, which on Linux is likely to be provided by &lt;a class=&quot;reference external&quot; href=&quot;http://www.kernel.org/pub/linux/utils/util-linux-ng/&quot;&gt;util-linux&lt;/a&gt;, does exactly
this.  The man page even offers an example of how it works(I’ve changed it
slightly to make it work correctly on my system):&lt;/p&gt;
&lt;div class=&quot;highlight-console notranslate&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;PERM LINKS OWNER GROUP SIZE DATE HH:MM NAME&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;     ls -l static/ &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sed 1d&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; column -t
&lt;span class=&quot;go&quot;&gt;PERM        LINKS  OWNER  GROUP  SIZE   DATE        HH:MM  NAME&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    328    2009-09-25  02:59  body_background.png&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    7234   2009-09-25  02:59  draft.png&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    6253   2009-09-25  02:59  extract-metadata.xsl&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    13143  2009-10-07  09:05  foaf.rdf&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    3580   2009-09-25  02:59  gpg.asc&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    7739   2009-09-25  02:59  icon.png&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    96     2009-09-25  02:59  meta_background.png&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    411    2009-09-29  11:39  remote.png&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Given some other standard commands we can mangle that data in various ways at
the shell prompt too, for example we may wish to display the total size of all
the files.  Or, as in the output below, the total size of all the &lt;abbr title=&quot;Portable Network Graphics&quot;&gt;PNG&lt;/abbr&gt; files in the directory.&lt;/p&gt;
&lt;div class=&quot;highlight-console notranslate&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;PERM LINKS OWNER GROUP SIZE DATE HH:MM NAME&amp;quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;     ls -l static/ &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sed 1d&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; column -t &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;{print}&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;         /\.png/ {sum+=$5}&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;         END {print &amp;quot;Total size of PNG files:&amp;quot;, sum}&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;PERM        LINKS  OWNER  GROUP  SIZE   DATE        HH:MM  NAME&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    328    2009-09-25  02:59  body_background.png&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    7234   2009-09-25  02:59  draft.png&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    6253   2009-09-25  02:59  extract-metadata.xsl&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    13143  2009-10-07  09:05  foaf.rdf&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    3580   2009-09-25  02:59  gpg.asc&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    7739   2009-09-25  02:59  icon.png&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    96     2009-09-25  02:59  meta_background.png&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r--  1      jay    jay    411    2009-09-29  11:39  remote.png&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Total size of PNG files: 15808&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In the original question on how to process &lt;abbr title=&quot;Comma Separated Values&quot;&gt;CSV&lt;/abbr&gt; files all we really need to
do is get the data in to a state for &lt;strong class=&quot;command&quot;&gt;column&lt;/strong&gt; to process, and we can
use &lt;a class=&quot;reference external&quot; href=&quot;http://www.linuxmanpages.com/man1/tr.1.php&quot;&gt;tr&lt;/a&gt; to do that.  An example using a small chunk of the network log on this
computer that we wish to format and calculate totals for could be:&lt;/p&gt;
&lt;div class=&quot;highlight-console notranslate&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cat stats
&lt;span class=&quot;go&quot;&gt;2009-07-15T05:09:42+0100,16803,4304661,129262665&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-16T04:10:29+0100,17551,4012917,67572304&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-16T19:03:00+0100,17621,1712073,34162500&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T14:18:19+0100,7961,1071313,26286593&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T18:23:40+0100,1867,308589,6057915&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T18:53:21+0100,1740,180197,2907388&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T19:00:03+0100,356,152917,928948&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T22:01:57+0100,6611,1159789,25562873&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-18T13:09:31+0100,1681,164663,2049315&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-18T13:24:04+0100,834,54025,662134&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Date,Duration,Sent,Received&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  cat stats &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&amp;gt;     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tr &lt;span class=&quot;s1&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; column -t &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;{print}&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;         !/Date/ {sent+=$3; recv+=$4}&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;         END {print &amp;quot;\nTotal sent: &amp;quot;sent&amp;quot;, Total received: &amp;quot;recv}&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Date                      Duration  Sent     Received&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-15T05:09:42+0100  16803     4304661  129262665&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-16T04:10:29+0100  17551     4012917  67572304&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-16T19:03:00+0100  17621     1712073  34162500&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T14:18:19+0100  7961      1071313  26286593&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T18:23:40+0100  1867      308589   6057915&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T18:53:21+0100  1740      180197   2907388&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T19:00:03+0100  356       152917   928948&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-17T22:01:57+0100  6611      1159789  25562873&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-18T13:09:31+0100  1681      164663   2049315&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2009-07-18T13:24:04+0100  834       54025    662134&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Total sent: 13121144, Total received: 295452635&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
